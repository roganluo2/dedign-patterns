1、熟练掌握单例模式的常见写法。
2、思考破坏单例模式的方式有哪些？并且归纳总结。
   2.1 反射， 通过暴力调用私有构造函数的newinstance方法实例化， 解决方法：在构造函数中抛出异常
   2.2 序列化，通过序列化，反序列化的时候，如果类中有构造函数，jdk会调用newInstance实例化对象，破坏单例
       但是jdk会检查类中有没有readResolve方法，如果有该方法，通过invoke反射调用，返回该方法中返回的实例，避免生产多实例。
   2.3 枚举式注册单例，有天然预防被破话的功能，针对反射破坏，jdk层面限制了构造方法的调用，对于序列化破坏，枚举类型实例是在类
   被加载的时候，就已经完成初始化，在readEnums时候，直接获取类加载时创建的enum实例对象，所以不会破坏到单例。
3、梳理内部类的执行逻辑，并画出时序图。
